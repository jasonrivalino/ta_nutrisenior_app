@startuml
set namespaceSeparator ::
left to right direction

skinparam classAttributeIconSize 0

' ================== PROMO VIEW ==================
package "PromoListDetail::promo_list_detail_view" {
  class BusinessListView {
    +int initialIndex
    +String restoRoute
    +String marketRoute
    +String? appBarTitle
    +String? promoTitle
    +int bottomNavIndex
    +List<Map<String, dynamic>> businessesData
    +Widget build()
  }
}

package "PromoListDetail::promo_list_detail_widget" {
  class BusinessListItem {
    +String? title
    +List<Map<String, dynamic>> businesses
    +Widget build()
  }
}

' ================== PROMO CONTROLLER ==================
package "PromoListDetail::promo_list_detail_controller" {
  class PromoController {
    {static} -List<Map<String, dynamic>> _mergedData
    {static} +List<Map<String, dynamic>> promoDiscountRestaurant
    {static} +List<Map<String, dynamic>> promoFreeShipmentRestaurant
    {static} +List<Map<String, dynamic>> promoDiscountMarket
    {static} +List<Map<String, dynamic>> promoFreeShipmentMarket
    {static} -List<Map<String, dynamic>> _mergeAndSort()
    {static} +bool isBusinessOpen()
  }
}

' ================== SHARED FUNCTION ==================
package "shared::utils_functionals" {
  class isBusinessOpen << (R,skyblue) procedure_return >> {
    +DateTime? openHour
    +DateTime? closeHour
    --
    return: bool
  }
}

' ================== SHARED WIDGETS ==================
package "shared::widgets" {
  class CustomAppBar {
    +String title
    +bool showBackButton
    +List<Map<String, dynamic>>? customParam1
    +String? customParam2
    +void Function()? onBack
    +Size preferredSize
    +Widget build()
  }

  class BottomNavBar {
    +int currentIndex
    -void _onItemTapped()
    +Widget build()
  }

  class RestoMarketSelectionToggle {
    +int initialIndex
    +String restoRoute
    +String marketRoute
    +_SelectionToggleState createState()
  }

  class _SelectionToggleState {
    +int selectedIndex
    +void initState()
    -void _onSelect()
    +Widget build()
  }

  RestoMarketSelectionToggle --> _SelectionToggleState : createState()
}

package "shared::promo_card_list_widgets" {
  class ListTitle {
    +String title
    +DateTime? businessOpenHour
    +DateTime? businessCloseHour
    +Widget build()
  }

  class CardList {
    +int? businessId
    +String? businessImage
    +String? businessName
    +String businessType
    +double? businessRate
    +double? businessLocation
    +int? productId
    +bool? isOpen
    +String? productImage
    +String? productName
    +int? productPrice
    +String? productDescription
    +int? discountNumber
    +bool? isFreeShipment
    +int? count
    +String? notes
    +Map<String, List<int>> addOnsSelection
    +void Function(int)? onCountChanged
    +void Function(String)? onNotesChanged
    +void Function(Map<String, List<int>>)? onAddOnsChanged
    +void Function() onTap
    +State<CardList> createState()
  }

  class _CardListState {
    -void _incrementCount()
    -void _decrementCount()
    +Widget build()
  }
}

' ================== RELATIONSHIPS ==================
BusinessListView --> PromoController : <<controller>>
BusinessListView --> CustomAppBar : <<uses>>
BusinessListView --> RestoMarketSelectionToggle : <<uses>>
BusinessListView --> BusinessListItem : <<uses>>
BusinessListView --> BottomNavBar : <<uses>>

BusinessListItem --> ListTitle : <<uses>>
BusinessListItem --> CardList : <<uses>>
CardList --> _CardListState : createState()
_CardListState --> isBusinessOpen : <<util>>

@enduml