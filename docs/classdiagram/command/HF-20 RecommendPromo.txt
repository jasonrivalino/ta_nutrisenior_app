@startuml
set namespaceSeparator ::
left to right direction

skinparam classAttributeIconSize 0

' ================== PROMO VIEW ==================
package "RecommendPromo::recommend_promo_view" {
  class RecommendPromoView {
    +int initialIndex
    +String restoRoute
    +String marketRoute
    +String discountRouteDetail
    +String freeShipmentRouteDetail
    +List<Map<String, dynamic>> discountBusinesses
    +List<Map<String, dynamic>> freeShipmentBusinesses
    +Widget build()
  }
}

package "RecommendPromo::recommend_promo_widget" {
  class RecommendedPromoCardList {
    +String title
    +String routeDetail
    +double heightCard
    +List<Map<String, dynamic>> businesses
    +Widget build()
  }
}

' ================== PROMO CONTROLLER ==================
package "RecommendPromo::recommend_promo_controller" {
  class PromoController {
    {static} -List<Map<String, dynamic>> _mergedData
    {static} +List<Map<String, dynamic>> promoDiscountRestaurant
    {static} +List<Map<String, dynamic>> promoFreeShipmentRestaurant
    {static} +List<Map<String, dynamic>> promoDiscountMarket
    {static} +List<Map<String, dynamic>> promoFreeShipmentMarket
    {static} -List<Map<String, dynamic>> _mergeAndSort()
    {static} +bool isBusinessOpen()
  }
}

' ================== SHARED FUNCTION ==================
package "shared::utils_functionals" {
  class isBusinessOpen << (R,skyblue) procedure_return >> {
    +DateTime? openHour
    +DateTime? closeHour
    --
    return: bool
  }
}

' ================== SHARED WIDGETS ==================
package "shared::widgets" {
  class CustomAppBar {
    +String title
    +bool showBackButton
    +List<Map<String, dynamic>>? customParam1
    +String? customParam2
    +void Function()? onBack
    +Size preferredSize
    +Widget build()
  }

  class BottomNavBar {
    +int currentIndex
    -void _onItemTapped()
    +Widget build()
  }

  class RestoMarketSelectionToggle {
    +int initialIndex
    +String restoRoute
    +String marketRoute
    +_SelectionToggleState createState()
  }

  class _SelectionToggleState {
    +int selectedIndex
    +void initState()
    -void _onSelect()
    +Widget build()
  }

  RestoMarketSelectionToggle --> _SelectionToggleState : createState()
}

package "shared::promo_card_box_widgets" {
  class ListTitle {
    +String title
    +DateTime? businessOpenHour
    +DateTime? businessCloseHour
    +Widget build()
  }

  class ElevatedButtonWidget {
    +Widget child
    +Color backgroundColor
    +Color foregroundColor
    +BorderSide? borderSide
    +TextStyle? textStyle
    +Size? minimumSize
    +double elevation
    +double borderRadius
    +EdgeInsetsGeometry? padding
    +MaterialTapTargetSize? tapTargetSize
    +VoidCallback? onPressed
    +Widget build()
    {static} +bottomButton()
    {static} +iconButton()
    {static} +warningButton()
    {static} +submitFormButton()
  }

  class CardBox {
    +int? businessId
    +String? businessImage
    +String? businessName
    +String businessType
    +double? businessRate
    +double? businessLocation
    +DateTime businessOpenHour
    +DateTime businessCloseHour
    +int? productId
    +String? productImage
    +String? productName
    +int? productPrice
    +String? productDescription
    +int? discountNumber
    +int count
    +String notes
    +Map<String, List<int>> addOnsSelection
    +void Function(int)? onCountChanged
    +void Function(String)? onNotesChanged
    +void Function(Map<String, List<int>>)? onAddOnsChanged
    +void Function() onTap
    +State<CardBox> createState()
  }

  class _CardBoxState {
    -bool _isPressed
    -void _setPressed()
    -void _incrementCount()
    -void _decrementCount()
    +Widget build()
  }
}

' ================== RELATIONSHIPS ==================
RecommendPromoView --> PromoController : <<controller>>
RecommendPromoView --> CustomAppBar : <<uses>>
RecommendPromoView --> RestoMarketSelectionToggle : <<uses>>
RecommendPromoView --> RecommendedPromoCardList : <<uses>>
RecommendPromoView --> BottomNavBar : <<uses>>

RecommendedPromoCardList --> ListTitle : <<uses>>
RecommendedPromoCardList --> ElevatedButtonWidget : <<uses>>
RecommendedPromoCardList --> CardBox : <<uses>>
CardBox --> _CardBoxState : createState()
_CardBoxState --> isBusinessOpen : <<util>>

@enduml